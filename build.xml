<?xml version="1.0"?>
<project name="TechDivision_ApplicationServerWebsite" default="deploy" basedir=".">
    <property name="php-src.dir" value="${basedir}/src" />
    <property name="php-test.dir" value="${basedir}/tests" />
    <property name="php-target.dir" value="${basedir}/target"/>
    
    <property environment="env" />
    
    <property file="${basedir}/build.properties"/>
    <property file="${basedir}/build.default.properties"/>

    <!-- ==================================================================== -->
    <!-- Cleans the directories with the generated source files				  -->
    <!-- ==================================================================== -->
    <target name="clean" description="Cleans almost everything, so use carefully.">
        <delete dir="${php-target.dir}" includeemptydirs="true" quiet="false" verbose="true" failonerror="true"/>
    </target>

    <!-- ==================================================================== -->
    <!-- Prepares all the required directories								  -->
    <!-- ==================================================================== -->
    <target name="prepare" depends="clean" description="Prepares all the required directories.">
        <mkdir dir="${php-target.dir}" />
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the sources to the target directory							  -->
    <!-- ==================================================================== -->
    <target name="copy" depends="prepare" description="Copies the sources to the target directory.">
        <antcall target="sass-compile"/>
        <copy todir="${php-target.dir}/${webapp.name}" preservelastmodified="true" overwrite="true">
            <fileset dir="${php-src.dir}">
                <include name="**/*.php" />
                <include name="**/*.yml" />
                <include name="**/*.properties" />
                <include name="**/*.xml" />
                <include name="**/*.xml.*" />
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="${php-target.dir}/${webapp.name}" preservelastmodified="true" overwrite="true">
            <fileset dir="${php-src.dir}">
                <include name="**/*" />
                <exclude name="**/*.php" />
                <exclude name="**/*.yml" />
                <exclude name="**/*.properties" />
                <exclude name="**/*.xml" />
                <exclude name="**/*.xml.*" />
            </fileset>
        </copy>
    	<exec executable="composer.phar" dir="${php-target.dir}/${webapp.name}">
            <arg line="update"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Prepares the documentation to the target directory                   -->
    <!-- ==================================================================== -->
    <target name="prepare-doc" description="Copies the documentation to the target directory.">
        <exec executable="git" dir="${php-target.dir}">
            <arg line="clone https://github.com/${doc.git.namespace}/${doc.git.repo}.git"/>
        </exec>
        <exec executable="git" dir="${php-target.dir}/${doc.git.repo}">
            <arg line="checkout ${webapp.appserver.version}"/>
        </exec>
        <exec executable="make" dir="${php-target.dir}/${doc.git.repo}/doc" failonerror="true">
            <arg line="html" />
        </exec>
        <copy
            file="${doc.build.file}"
            tofile="${doc.target.file}"
            overwrite="true"
        />
        <copy todir="${doc.image.target.dir}" preservelastmodified="true" overwrite="true" failonerror="false">
            <fileset dir="${doc.image.build.dir}">
                <include name="**/*" />
            </fileset>
        </copy>
        <replaceregexp file="${doc.target.file}"
                       match="src=&quot;_images"
                       replace="src=&quot;static/img/docs"
                       byline="true"
                />
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the sources to the deploy directory     					  -->
    <!-- ==================================================================== -->
    <target name="deploy" depends="copy" description="Copies the sources to the deploy directory.">
        <antcall target="prepare-doc"/>
        <copy todir="${deploy.dir}/${webapp.name}" preservelastmodified="true" overwrite="true">
            <fileset dir="${php-target.dir}/${webapp.name}">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <!-- ==================================================================== -->
    <!-- Creates a PHAR file for deployment     					  		  -->
    <!-- ==================================================================== -->
	<target name="create-phar" depends="copy" description="Creates a PHAR file for deployment.">
        <antcall target="prepare-doc"/>
		<exec executable="phar">
			<arg line="pack -l 0 -f ${php-target.dir}/${webapp.name}.phar ${php-target.dir}/${webapp.name}"/>
		</exec>
	</target>

    <!-- ==================================================================== -->
    <!-- Generates the API documentation                                      -->
    <!-- ==================================================================== -->
    <target name="apidoc" description="Generates the API documentation.">
        <exec executable="phpdoc">
            <arg line="-ct type -ue on -s on -t ${php-target.dir}/docs -o HTML:frames:earthli -d ${php-src.dir}/app/code/core"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the code sniffer and generates a report                         -->
    <!-- ==================================================================== -->
    <target name="phpcs" depends="apidoc" description="Runs the code sniffer and generates a report.">
        <exec executable="phpcs" output="${php-target.dir}/reports/checkstyle.xml">
            <arg line="--standard=ZEND --report=checkstyle ${php-src.dir}"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the copy and paste detection                                    -->
    <!-- ==================================================================== -->
    <target name="phpcpd" depends="phpcs" description="Runs the copy and paste detection.">
        <exec executable="phpcpd">
            <arg line="--log-pmd ${php-target.dir}/reports/pmd-cpd.xml ${php-src.dir}"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Generate phploc.csv                                                  -->
    <!-- ==================================================================== -->
    <target name="phploc" depends="phpcpd" description="Generate phploc.csv">
        <exec executable="phploc">
            <arg line="--log-xml ${php-target.dir}/reports/phploc.xml ${php-src.dir}"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHPDepend tool and generats a graphs                        -->
    <!-- ==================================================================== -->
    <target name="pdepend" depends="phploc" description="Runs the PHPDepend tool and generats a graphs.">
        <exec executable="pdepend">
            <arg line="--summary-xml=${php-target.dir}/reports/pdepend.xml --jdepend-xml=${php-target.dir}/reports/jdepend.xml --jdepend-chart=${php-target.dir}/reports/jdepend.svg --overview-pyramid=${php-target.dir}/reports/pdepend-pyramid.svg ${php-src.dir}" />
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHP mess detector tool                                      -->
    <!-- ==================================================================== -->
    <target name="phpmd" depends="pdepend" description="Runs the PHP Mess detector tool.">
        <exec executable="phpmd">
            <arg line="${php-src.dir} xml codesize,unusedcode --reportfile ${php-target.dir}/reports/pmd.xml" />
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the test sources to the target directory					  -->
    <!-- ==================================================================== -->
    <target name="copy-tests" depends="copy" description="Copies the test sources to the target directory.">
        <copy todir="${php-target.dir}">
            <fileset dir="${php-test.dir}">
                <include name="**/*" />
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHPUnit tests and generates a report                        -->
    <!-- ==================================================================== -->
    <target name="run-tests" depends="copy-tests" description="Runs the PHPUnit tests and generates a report.">
        <exec executable="phpunit" dir="${php-target.dir}">
            <arg line="--bootstrap bootstrap.php --configuration phpunit.xml.dist" />
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Compiles sass to css                                			 	  -->
    <!-- ==================================================================== -->
    <target name="sass-compile" if="${sass.compile}" description="Compiles sass to css">
        <echo message="Compiling sass to css..." />
        <!-- compile -->
        <exec dir="${php-src.dir}" executable="compass" >
            <arg value="compile"/>
        </exec>
    </target>

</project>
